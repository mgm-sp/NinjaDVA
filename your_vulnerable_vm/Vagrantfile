# -*- mode: ruby -*-
# vi: set ft=ruby :

# ninjaDVA your vulnerable vm
#
# Requirements:
# Please execute `vagrant plugin install vagrant-triggers`
# if you start the vm the first time and get an error

Vagrant.configure("2") do |config|

    #-------------------Your VM config----------------------------------

    # name and version of vm image
    config.vm.box = "debian/contrib-stretch64"
    config.vm.box_version = "9.1.0"

    #set hostname for vm
    config.vm.hostname = "yourvulnerablevm"
    ENV['LC_ALL']="en_US.UTF-8"

    ########################################################################################################
    # To inform the dashboard that a participant
    # solved a challenge, use the installed program
    # ninjasolver [options]
    # -r, --remote_solution_handler_url  (required) url of the solution handler script on the dashboard vm
    # -i, --ip_addr                      (required) ip address of the participant solved the challenge
    # -c, --category                     (required) category of the solution
    # -s, --state                        (required) state of the challenge
    # --comment                          (optional) comment for the trainer
    ########################################################################################################


    #----------------- ninjaDVA specific configuration -------------------------------

    # add a interface to the vm that is in the same internal network like the gateway vm
    config.vm.network "private_network", type: "dhcp", virtualbox__intnet: "ninjadva"

    # install ninjadva specific software
    # TODO: export this to a git repo and install all dependencies via makefile
    config.vm.provision "shell", inline: <<~END
        apt-get -y update
        apt-get -y install ruby ruby-dev
    END
    config.vm.provision "file", source: "../ninjadva_service", destination: "/home/vagrant/tmp_provision/ninjadva_service"
    config.vm.provision "shell", inline: <<~END
        cd /home/vagrant/tmp_provision/
        cp -R ninjadva_service /usr/share/
        chmod +x /usr/share/ninjadva_service/ninjasolver.rb
        ln -sf /usr/share/ninjadva_service/ninjasolver.rb /usr/local/bin/ninjasolver
        rm -rf *
    END

    # NinjaDVA specifics
    # test whether the vm is started in ninjaDVA context
    # if yes copy challanges to dashboard vm
    if File.exists?("../ninjadva.rb")
        require "../ninjadva"
        NinjaDVA.new(config)
    end
end
